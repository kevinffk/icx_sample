apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"


    defaultConfig {
        applicationId "com.icarbonx.icxsample"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


    annotationProcessor rootProject.ext.butterknifeCompiler


    //project
    checkDependency 'project_metabolite_dev',
//            'project_bong_dev',
            'project_microflora_dev',
            'project_gene_dev',
            'project_sports_dev',
            'project_icxstrap_dev',
            'project_fit_dev',
//            'project_heartguard_dev',
            'project_heartratepaste_dev',
            'project_smartmirror_dev',
            'project_assistant_dev',
            'project_tomato_dev',
            'project_protein_dev',
            'project_blood_routine_dev',
            //module
            'module_core_dev',
            'module_user_dev',
            'module_sample_dev',
            'module_order_dev',
            'module_address_dev',
            //core
             'core_slidingmenu_dev',
            'core_residemenu_dev',
            'core_mpchart_dev',
            'core_calendar_dev',
            'core_common_dev',
            'core_meum_dev',
//            'core_udesk_dev',
            'core_qrcode_dev',
            'core_threadsdownloader_dev',
            'core_message_dev',
            'core_icxchart_dev',
            'core_resource_dev',
            'core_ui_dev',
            'core_faceplus_dev'
}

/**
 * 检查模块依赖
 * @param unitNameArray
 */
def checkDependency(String ... unitNameArray) {
    if (unitNameArray != null && unitNameArray.length > 0) {
        String unitStr
        for (int i = 0; i < unitNameArray.length; i++) {
            unitStr = unitNameArray[i].replace("_dev", "")
            if(!this."${unitNameArray[i]}".toBoolean()) {
                dependencies.compile(rootProject.ext."${unitStr}_compile") {
                    exclude group: rootProject.ext.groupid_project
                    exclude group: rootProject.ext.groupid_module
                    exclude group: rootProject.ext.groupid_core
                }
            } else {
                dependencies.compile project(":" + rootProject.ext."${unitStr}")
            }
        }

    }
}
